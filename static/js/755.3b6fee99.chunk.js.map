{"version":3,"file":"static/js/755.3b6fee99.chunk.js","mappings":"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","sources":["components/PageTemplates/AuthPageTemplate/AuthPageTemplate.styled.jsx","components/PageTemplates/AuthPageTemplate/AuthPageTemplate.jsx","components/Forms/ForgotPasswordForm/ForgotPasswordForm.styled.jsx","validationSchemas/validationSchemaForgotPassword.js","components/Forms/ForgotPasswordForm/ForgotPasswordForm.jsx","pages/ForgotPasswordPage/ForgotPasswordPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 24px;\n  padding: 24px 0;\n  background-color: ${props => props.theme.colors.black};\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    row-gap: 60px;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    flex-direction: row;\n    row-gap: 0;\n    column-gap: 100px;\n    justify-content: center;\n    padding: 40px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 380px;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 590px;\n    height: 590px;\n  }\n`;\n\nexport const ContentBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 24px;\n  width: 300px;\n  height: ${({ $hasCtaBlock }) => ($hasCtaBlock ? '450px' : 'auto')};\n  font-family: ${p => p.theme.fontFamily.poppins};\n  color: ${props => props.theme.colors.gray};\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 450px;\n    height: ${({ $hasCtaBlock }) => ($hasCtaBlock ? '550px' : 'auto')};\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    padding-top: 80px;\n    height: ${({ $hasCtaBlock }) => ($hasCtaBlock ? '600px' : 'auto')};\n  }\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 16px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-weight: ${props => props.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.l2};\n  line-height: 1.25;\n  color: ${props => props.theme.colors.white};\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    text-align: left;\n    font-size: ${p => p.theme.fontSizes.xl};\n    line-height: 1.2;\n  }\n`;\n\nexport const Text = styled.p`\n  width: 300px;\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.33;\n  text-align: center;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 450px;\n    font-size: ${p => p.theme.fontSizes.l};\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    text-align: left;\n    line-height: 1.45;\n  }\n`;\n\nexport const CtaContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 20px;\n  flex-grow: 1;\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: flex-end;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const CtaText = styled.p`\n  font-weight: ${p => p.theme.fontWeights.regular};\n`;\n\nexport const CtaLink = styled(Link)`\n  color: ${p => p.theme.colors.white};\n  font-weight: ${p => p.theme.fontWeights.medium};\n\n  &:hover {\n    color: ${p => p.theme.colors.greenLite};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  Image,\n  ContentBox,\n  TextContainer,\n  Title,\n  Text,\n  CtaContainer,\n  CtaText,\n  CtaLink,\n} from './AuthPageTemplate.styled';\n\nconst AuthPageTemplate = ({\n  url,\n  title,\n  text,\n  ctaText,\n  ctaLink,\n  ctaLinkText,\n  children,\n}) => {\n  const hasCtaBlock = ctaText && ctaLink && ctaLinkText;\n\n  return (\n    <Container>\n      <Image src={url} alt=\"Banner\" />\n\n      <ContentBox $hasCtaBlock={hasCtaBlock}>\n        <TextContainer>\n          <Title>{title}</Title>\n          <Text>{text}</Text>\n        </TextContainer>\n\n        {children}\n\n        {hasCtaBlock && (\n          <CtaContainer>\n            <CtaText>{ctaText}</CtaText>\n            <CtaLink to={ctaLink}>{ctaLinkText}</CtaLink>\n          </CtaContainer>\n        )}\n      </ContentBox>\n    </Container>\n  );\n};\n\nAuthPageTemplate.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  ctaText: PropTypes.string,\n  ctaLink: PropTypes.string,\n  ctaLinkText: PropTypes.string,\n};\n\nexport default AuthPageTemplate;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    align-self: flex-start;\n  }\n`;\n\nexport const FormField = styled.div`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 4px;\n  margin-bottom: 20px;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 380px;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 212px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  height: 36px;\n  width: 100%;\n  padding: 10px 8px;\n  border: ${p =>\n    p.$error\n      ? `${p.theme.borders.normal} ${p.theme.colors.error}`\n      : p.value === ''\n      ? `${p.theme.borders.normal} ${p.theme.colors.greenLite}`\n      : `${p.theme.borders.normal} ${p.theme.colors.correct}`};\n  border-radius: 12px;\n  background-color: ${p => p.theme.colors.black2};\n  color: ${p => p.theme.colors.gray};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  font-family: ${props => props.theme.fontFamily.poppins};\n  font-size: 10px;\n  font-weight: ${props => props.theme.fontWeights.regular};\n  line-height: 12px;\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const FormButton = styled.button`\n  width: 300px;\n  padding: 8px;\n  text-align: center;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.greenLite};\n  border-radius: ${p => p.theme.radii.normal};\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.greenLite};\n  font-family: ${p => p.theme.fontFamily.poppins};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n  cursor: pointer;\n\n  @media (${props => props.theme.mq.tablet}) {\n    width: 380px;\n  }\n\n  @media (${props => props.theme.mq.desktop}) {\n    width: 212px;\n  }\n`;\n","import * as yup from 'yup';\n\nconst validationSchemaForgotPassword = yup.object({\n  email: yup\n    .string()\n    .email('Invalid email address')\n    .required('Email is required'),\n});\n\nexport default validationSchemaForgotPassword;\n","import { useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\n\nimport {\n  FormWrapper,\n  FormField,\n  Input,\n  ErrorMsg,\n  FormButton,\n} from './ForgotPasswordForm.styled';\n\nimport validationSchemaForgotPassword from 'validationSchemas/validationSchemaForgotPassword';\nimport { useDispatch } from 'react-redux';\nimport { resetPassword } from 'redux/Auth/authOperations';\n\nconst ForgotPasswordForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const initialValues = {\n    email: '',\n  };\n\n  const handleSubmit = ({ email }, { resetForm }) => {\n    dispatch(resetPassword({ email }))\n      .unwrap()\n      .catch(error => {\n        console.error(error);\n        resetForm();\n        navigate('/signin');\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchemaForgotPassword}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched, values }) => (\n        <FormWrapper>\n          <FormField>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              autoComplete=\"email\"\n              $error={touched.email && errors.email}\n              value={values.email}\n            />\n            <ErrorMsg\n              className={touched.email && errors.email ? 'visible' : ''}\n              name=\"email\"\n              component=\"div\"\n            />\n          </FormField>\n\n          <FormButton type=\"submit\">Send</FormButton>\n        </FormWrapper>\n      )}\n    </Formik>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import AuthPageTemplate from 'components/PageTemplates/AuthPageTemplate';\nimport ForgotPasswordForm from 'components/Forms/ForgotPasswordForm';\n\nimport logoPic from 'images/WelcomeLogoPic.png';\n\nconst ForgotPasswordPage = () => {\n  return (\n    <AuthPageTemplate\n      url={logoPic}\n      title=\"Forgot your password\"\n      text=\"We will send you an email with recovery instructions\"\n      ctaText=\"Do you already have an account?\"\n      ctaLink=\"/signin\"\n      ctaLinkText=\"Sign in\"\n    >\n      <ForgotPasswordForm />\n    </AuthPageTemplate>\n  );\n};\nexport default ForgotPasswordPage;\n"],"names":["Container","styled","props","theme","colors","black","mq","desktop","Image","tablet","ContentBox","_ref","$hasCtaBlock","p","fontFamily","poppins","gray","_ref2","_ref3","TextContainer","Title","fontWeights","medium","fontSizes","l2","white","xl","Text","regular","m","l","CtaContainer","xs","CtaText","CtaLink","Link","greenLite","url","title","text","ctaText","ctaLink","ctaLinkText","children","hasCtaBlock","_jsxs","_jsx","src","alt","to","FormWrapper","Form","FormField","Input","Field","$error","borders","normal","error","value","correct","black2","ErrorMsg","ErrorMessage","FormButton","radii","yup","email","required","ForgotPasswordForm","navigate","useNavigate","dispatch","useDispatch","Formik","initialValues","validationSchema","validationSchemaForgotPassword","onSubmit","handleSubmit","resetForm","resetPassword","unwrap","catch","console","errors","touched","values","type","name","placeholder","autoComplete","className","component","ForgotPasswordPage","AuthPageTemplate","logoPic"],"sourceRoot":""}