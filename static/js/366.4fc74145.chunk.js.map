{"version":3,"file":"static/js/366.4fc74145.chunk.js","mappings":"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","sources":["components/PageTemplates/AuthPageTemplate/AuthPageTemplate.styled.jsx","components/PageTemplates/AuthPageTemplate/AuthPageTemplate.jsx","components/UI/CustomRadioButton/CustomRadioButton.styled.jsx","components/UI/CustomRadioButton/CustomRadioButton.jsx","components/Forms/YourGoalForm/YourGoalForm.styled.jsx","components/Forms/YourGoalForm/YourGoalForm.jsx","pages/YourGoalPage/YourGoalPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 24px;\n  padding: 24px 0;\n  background-color: ${props => props.theme.colors.black};\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    row-gap: 60px;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    flex-direction: row;\n    row-gap: 0;\n    column-gap: 100px;\n    justify-content: center;\n    padding: 40px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 380px;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 590px;\n    height: 590px;\n  }\n`;\n\nexport const ContentBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 24px;\n  width: 300px;\n  height: ${({ $hasCtaBlock }) => ($hasCtaBlock ? '450px' : 'auto')};\n  font-family: ${p => p.theme.fontFamily.poppins};\n  color: ${props => props.theme.colors.gray};\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 450px;\n    height: ${({ $hasCtaBlock }) => ($hasCtaBlock ? '550px' : 'auto')};\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    padding-top: 80px;\n    height: ${({ $hasCtaBlock }) => ($hasCtaBlock ? '600px' : 'auto')};\n  }\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 16px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-weight: ${props => props.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.l2};\n  line-height: 1.25;\n  color: ${props => props.theme.colors.white};\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    text-align: left;\n    font-size: ${p => p.theme.fontSizes.xl};\n    line-height: 1.2;\n  }\n`;\n\nexport const Text = styled.p`\n  width: 300px;\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.33;\n  text-align: center;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 450px;\n    font-size: ${p => p.theme.fontSizes.l};\n  }\n  @media screen and (${props => props.theme.mq.desktop}) {\n    text-align: left;\n    line-height: 1.45;\n  }\n`;\n\nexport const CtaContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 20px;\n  flex-grow: 1;\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    flex-direction: row;\n    justify-content: center;\n    align-items: flex-end;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const CtaText = styled.p`\n  font-weight: ${p => p.theme.fontWeights.regular};\n`;\n\nexport const CtaLink = styled(Link)`\n  color: ${p => p.theme.colors.white};\n  font-weight: ${p => p.theme.fontWeights.medium};\n\n  &:hover {\n    color: ${p => p.theme.colors.greenLite};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  Image,\n  ContentBox,\n  TextContainer,\n  Title,\n  Text,\n  CtaContainer,\n  CtaText,\n  CtaLink,\n} from './AuthPageTemplate.styled';\n\nconst AuthPageTemplate = ({\n  url,\n  title,\n  text,\n  ctaText,\n  ctaLink,\n  ctaLinkText,\n  children,\n}) => {\n  const hasCtaBlock = ctaText && ctaLink && ctaLinkText;\n\n  return (\n    <Container>\n      <Image src={url} alt=\"Banner\" />\n\n      <ContentBox $hasCtaBlock={hasCtaBlock}>\n        <TextContainer>\n          <Title>{title}</Title>\n          <Text>{text}</Text>\n        </TextContainer>\n\n        {children}\n\n        {hasCtaBlock && (\n          <CtaContainer>\n            <CtaText>{ctaText}</CtaText>\n            <CtaLink to={ctaLink}>{ctaLinkText}</CtaLink>\n          </CtaContainer>\n        )}\n      </ContentBox>\n    </Container>\n  );\n};\n\nAuthPageTemplate.propTypes = {\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  ctaText: PropTypes.string,\n  ctaLink: PropTypes.string,\n  ctaLinkText: PropTypes.string,\n};\n\nexport default AuthPageTemplate;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const RadioMark = styled.span`\n  min-width: 12px;\n  min-height: 12px;\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.gray};\n  border-radius: 50%;\n  position: relative;\n\n  &:after {\n    content: '';\n    min-width: 6px;\n    min-height: 6px;\n    background-color: ${props => props.theme.colors.yellow};\n    border-radius: 50%;\n    position: absolute;\n    opacity: 0;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport const RadioInput = styled(Field)`\n  display: none;\n  margin-right: 8px;\n\n  &:checked + ${RadioMark} {\n    &:after {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const LabelWithRadio = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  cursor: pointer;\n\n  &:hover > ${RadioMark} {\n    border-color: ${props => props.theme.colors.greenLite};\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LabelWithRadio,\n  RadioInput,\n  RadioMark,\n} from './CustomRadioButton.styled';\n\nconst CustomRadioButton = ({ name, value, selectedValue, text }) => {\n  return (\n    <LabelWithRadio>\n      <RadioInput\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={selectedValue === value}\n      />\n      <RadioMark />\n      {text}\n    </LabelWithRadio>\n  );\n};\n\nCustomRadioButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default CustomRadioButton;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    align-self: flex-start;\n  }\n`;\n\nexport const FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > label {\n    font-size: ${props => props.theme.fontSizes.xs};\n    font-weight: ${props => props.theme.fontWeights.medium};\n    line-height: 20px;\n    margin-bottom: 24px;\n  }\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    flex-direction: column;\n  }\n`;\n\nexport const NextButton = styled.button`\n  width: 300px;\n  padding: 8px 10px;\n  font-family: ${p => p.theme.fontFamily.poppins};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.greenLite};\n  color: ${p => p.theme.colors.black};\n  background-color: ${p => p.theme.colors.greenLite};\n  cursor: pointer;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    width: 380px;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 212px;\n  }\n`;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setUserGoal } from 'redux/Auth/authSlice';\nimport { Formik } from 'formik';\n\nimport CustomRadioButton from 'components/UI/CustomRadioButton/CustomRadioButton';\n\nimport { FormGroup, FormWrapper, NextButton } from './YourGoalForm.styled';\nimport { selectUser } from 'redux/Auth/authSelectors';\nimport { GOAL_OPTIONS } from 'constants/goalOptions';\n\nconst YourGoalForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector(selectUser);\n\n  const initialValues = {\n    goal: user.goal || 'Lose fat',\n  };\n\n  const handleClickNext = values => {\n    dispatch(setUserGoal(values.goal));\n    navigate('/select-gender');\n  };\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleClickNext}>\n      {({ values }) => (\n        <FormWrapper>\n          <FormGroup role=\"group\" aria-labelledby=\"goal-head\">\n            {GOAL_OPTIONS.map(option => (\n              <CustomRadioButton\n                name=\"goal\"\n                key={option.value}\n                value={option.value}\n                selectedValue={values.goal}\n                text={option.text}\n              />\n            ))}\n          </FormGroup>\n          <NextButton type=\"submit\">Next</NextButton>\n        </FormWrapper>\n      )}\n    </Formik>\n  );\n};\n\nexport default YourGoalForm;\n","import React from 'react';\n\nimport AuthPageTemplate from 'components/PageTemplates/AuthPageTemplate';\nimport YourGoalForm from 'components/Forms/YourGoalForm';\n\nimport GoalLogoPic from '../../images/YourGoalLogo.png';\n\nconst YourGoalPage = () => {\n  return (\n    <AuthPageTemplate\n      url={GoalLogoPic}\n      title=\"Your goal\"\n      text=\"Choose a goal so that we can help you effectively\"\n    >\n      <YourGoalForm />\n    </AuthPageTemplate>\n  );\n};\n\nexport default YourGoalPage;\n"],"names":["Container","styled","props","theme","colors","black","mq","desktop","Image","tablet","ContentBox","_ref","$hasCtaBlock","p","fontFamily","poppins","gray","_ref2","_ref3","TextContainer","Title","fontWeights","medium","fontSizes","l2","white","xl","Text","regular","m","l","CtaContainer","xs","CtaText","CtaLink","Link","greenLite","url","title","text","ctaText","ctaLink","ctaLinkText","children","hasCtaBlock","_jsxs","_jsx","src","alt","to","RadioMark","borders","normal","yellow","RadioInput","Field","LabelWithRadio","name","value","selectedValue","type","checked","FormWrapper","Form","FormGroup","NextButton","radii","YourGoalForm","dispatch","useDispatch","navigate","useNavigate","initialValues","goal","useSelector","selectUser","Formik","onSubmit","values","setUserGoal","role","GOAL_OPTIONS","option","CustomRadioButton","YourGoalPage","AuthPageTemplate","GoalLogoPic"],"sourceRoot":""}