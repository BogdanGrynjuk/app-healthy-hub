{"version":3,"file":"static/js/90.d7c9abff.chunk.js","mappings":"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","sources":["images/icons/arrow-right-open.svg","components/PageTemplates/TemplatePrivatePage/TemplatePrivatePage.styled.jsx","components/PageTemplates/TemplatePrivatePage/TemplatePrivatePage.jsx","components/ContentViews/ContentForDashboardPage/ContentForDashboardPage.styled.jsx","constants/monthName.js","components/Charts/LineChart/LineChart.styled.jsx","redux/Statistic/statsSelectors.js","components/Charts/LineChart/LineChart.jsx","components/Charts/ScaleChart/ScaleChart.styled.jsx","components/Charts/ScaleChart/ScaleChart.jsx","constants/periodTypes.js","components/ContentViews/ContentForDashboardPage/ContentForDashboardPage.jsx","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowRightOpen(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.62012 3.95312L13.6668 7.99979L9.62012 12.0465\",\n    stroke: \"#E3FFA8\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.33301 8H13.553\",\n    stroke: \"#E3FFA8\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRightOpen);\nexport default __webpack_public_path__ + \"static/media/arrow-right-open.4b79b540b4210b099c8be8dfec113119.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  background-color: ${props => props.theme.colors.black};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fontFamily.poppins};\n\n  padding-top: 16px;\n  padding-bottom: 60px;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    padding-top: 24px;\n    padding-bottom: 40px;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    padding-top: 20px;\n  }\n`;\n\nexport const Content = styled.div`\n  margin: 0 auto;\n  width: 320px;\n  padding: 0 10px;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    position: relative;\n    width: 834px;\n    padding: 0 27px;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 1440px;\n    padding: 0 34px;\n  }\n`;\n","import React from 'react';\nimport { Container, Content } from './TemplatePrivatePage.styled';\nimport PropTypes from 'prop-types';\n\nconst TemplatePrivatePage = ({ children }) => {\n  return (\n    <Container>\n      <Content>{children}</Content>\n    </Container>\n  );\n};\n\nTemplatePrivatePage.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default TemplatePrivatePage;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const HeaderPage = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\n\nexport const MainHeaderBlock = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const LinkToBack = styled(NavLink)`\n  display: flex;\n  margin-right: 8px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    margin-right: 12px;\n  }\n`;\n\nexport const ArrowReturn = styled.img`\n  width: 16px;\n  transform: rotate(180deg);\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    width: 24px;\n  }\n`;\n\nexport const ButtonToggleDropdown = styled.button`\n  display: flex;\n  align-items: center;\n  column-gap: 12px;\n  padding: 0;\n  border: ${p => p.theme.borders.none};\n  outline: none;\n  background-color: transparent;\n  color: ${p => p.theme.colors.white};\n  cursor: pointer;\n`;\n\nexport const TitlePage = styled.h1`\n  font-size: ${p => p.theme.fontSizes.l2};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: 1.25;\n  letter-spacing: 0em;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.xl};\n    line-height: 1.2;\n  }\n`;\n\nexport const Arrow = styled.img`\n  width: 16px;\n  height: 16px;\n  transform: ${({ $isOpen }) => ($isOpen ? 'rotate(180deg)' : 'rotate(0deg)')};\n  transition: transform 0.3s ease;\n`;\n\nexport const DropdownPeriodToggle = styled.button`\n  position: absolute;\n  background-color: ${p => p.theme.colors.black2};\n  border: ${p => p.theme.borders.none};\n  padding: 16px 0 16px 12px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 0px 4px 14px 0px #e3ffa833;\n  font-family: ${p => p.theme.fontFamily.poppins};\n  font-weight: ${p => p.theme.fontWeights.regular};\n  text-align: left;\n  color: inherit;\n  z-index: 1000;\n  top: 32px;\n  left: 24px;\n  width: 188px;\n  height: 52px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.38;\n\n  opacity: 0;\n  transform: scale(0);\n  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1), opacity 300ms;\n  will-change: transform, opacity;\n\n  &.active {\n    transform: scale(1);\n    opacity: 1;\n  }\n\n  &:not(.active) {\n    transform: scale(0);\n    opacity: 0;\n  }\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    top: 40px;\n    left: 36px;\n    width: 212px;\n    height: 64px;\n    font-size: ${p => p.theme.fontSizes.l};\n    line-height: 1.45;\n  }\n`;\n\nexport const SecondHeader = styled.h3`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.38;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.33;\n  }\n`;\n\nexport const GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 27px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    gap: 40px;\n  }\n\n  @media screen and (${p => p.theme.mq.desktop}) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto;\n    gap: 20px;\n\n    & > div:first-child {\n      grid-column: 1 / 2;\n    }\n\n    & > div:nth-child(2) {\n      grid-column: 2 / 3;\n    }\n\n    & > div:nth-child(3) {\n      grid-column: 1 / 3;\n    }\n  }\n`;\n","const full = {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December',\n};\n\nconst short = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec',\n};\n\nexport const MONTH_NAME = {\n  FULL: full,\n  SHORT: short,\n};\n","import styled from 'styled-components';\n\nexport const Chart = styled.div`\n  display: flex;\n  row-gap: 6px;\n  flex-direction: column;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  margin-bottom: 6px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    width: 320px;\n  }\n`;\n\nexport const ChartTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.44;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.l};\n    line-height: 1.45;\n  }\n`;\n\nexport const ValueDisplay = styled.span`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n`;\n\nexport const MetricValue = styled.span`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n  color: ${p => p.theme.colors.gray};\n`;\n\nexport const ScrollWrapper = styled.div`\n  width: calc(320px - (10px * 2));\n  overflow-x: scroll;\n  padding-bottom: 10px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    column-gap: 6px;\n    width: calc(834px - (24px * 2));\n    overflow-x: hidden;\n  }\n\n  @media screen and (${p => p.theme.mq.desktop}) {\n    width: calc((1440px - (34px * 2)) / 2 - 10px);\n  }\n\n  &::-webkit-scrollbar {\n    height: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    width: 150px;\n    background-color: rgba(41, 41, 40, 0.2);\n    border-radius: ${p => p.theme.radii.normal};\n    border: 1px solid rgba(227, 255, 168, 0.2);\n\n    &:hover {\n      background-color: rgba(227, 255, 168, 0.2);\n    }\n  }\n`;\n\nexport const ChartContainer = styled.div`\n  position: relative;\n  padding: 24px 20px 24px 14px;\n  background-color: ${p => p.theme.colors.black2};\n  border-radius: ${p => p.theme.radii.normal};\n  width: 676px;\n  height: 382px;\n\n  & canvas {\n    position: absolute;\n  }\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    width: 780px;\n\n    & canvas {\n      min-width: calc(780px - 34px);\n      min-height: auto;\n      margin: 0 auto;\n    }\n  }\n\n  @media screen and (${p => p.theme.mq.desktop}) {\n    width: 676px;\n\n    & canvas {\n      min-width: calc(676px - 34px);\n    }\n  }\n`;\n\nexport const ChartTooltip = styled.div`\n  width: 90px;\n  position: absolute;\n  opacity: 0;\n  padding: 8px 6px;\n  border-radius: 8px;\n  background-color: ${p => p.theme.colors.black2};\n  box-shadow: 0px 4px 14px 0px rgba(227, 255, 168, 0.2);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 2px;\n`;\n\nexport const TooltipValue = styled.span`\n  font-size: ${p => p.theme.fontSizes.xl};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: 1.19;\n`;\n\nexport const TooltipMetric = styled.span`\n  font-size: ${p => p.theme.fontSizes.xs};\n  font-weight: ${p => p.theme.fontWeights.regular};\n  line-height: 1.43;\n  color: ${p => p.theme.colors.gray};\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectIsLoading = state => state.statistic.isLoading;\n\nexport const selectStatisticInfo = state => state.statistic.info;\n\nexport const selectStatisticPerYear = createSelector(\n  [selectStatisticInfo],\n  statistic => statistic.weight\n);\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { MONTH_NAME } from 'constants/monthName.js';\n\nimport {\n  Chart,\n  ChartContainer,\n  ChartTitle,\n  ChartTooltip,\n  MetricValue,\n  ScrollWrapper,\n  TitleContainer,\n  TooltipMetric,\n  TooltipValue,\n  ValueDisplay,\n} from './LineChart.styled';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nimport { selectStatisticInfo } from 'redux/Statistic/statsSelectors.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst LineChart = ({ isYearData, type }) => {\n  const [time, setTime] = useState([]);\n  const [information, setInformation] = useState([]);\n  const [average, setAverage] = useState(0);\n\n  const info = useSelector(selectStatisticInfo);\n\n  useEffect(() => {\n    if (!info || Object.keys(info).length === 0) {\n      return;\n    }\n\n    const infoArray = [];\n    const timesArray = [];\n    const statistic = info[type] || [];\n\n    statistic.forEach(item => {\n      const formattedDate = isYearData\n        ? MONTH_NAME.SHORT[item._id.month]\n        : `${item._id.day}`;\n\n      const value = isYearData ? Math.round(item.avgMonth) : item[type];\n\n      timesArray.push(formattedDate);\n      infoArray.push(value);\n    });\n\n    const total =\n      infoArray.length > 0\n        ? Math.round(\n            infoArray.reduce((prev, curr) => prev + curr, 0) / infoArray.length\n          )\n        : 0;\n\n    if (infoArray.length === 0) {\n      const currentDate = new Date().getUTCDate();\n      const currentMonth = new Date().getUTCMonth() + 1;\n      timesArray.push(\n        isYearData ? MONTH_NAME.SHORT[currentMonth] : currentDate\n      );\n      infoArray.push(0);\n    }\n\n    setAverage(total);\n    setInformation(infoArray);\n    setTime(timesArray);\n  }, [info, isYearData, type]);\n\n  let caption = type === 'water' ? 'L' : 'K';\n  const yScaleMax = Math.max(...information) + 1000;\n\n  const options = {\n    interaction: {\n      mode: 'index',\n      intersect: false,\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n        position: 'nearest',\n        external: context => {\n          const { chart, tooltip } = context;\n          let tooltipEl = chart.canvas.parentNode.querySelector('div');\n          let tooltipTitle = chart.canvas.parentNode.querySelector('#value');\n          const tabletMediaQuery = window.matchMedia(\n            '(min-width: 768px) and (max-width: 1439px)'\n          );\n\n          if (tooltip.opacity === 0) {\n            tooltipEl.style.opacity = 0;\n            return;\n          }\n          const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\n          const tooltipWidth = tooltipEl.offsetWidth;\n          const tooltipHeight = tooltipEl.offsetHeight;\n          const caretX = tooltip.caretX;\n          const caretY = tooltip.caretY;\n\n          tooltipEl.style.opacity = 1;\n          tooltipEl.style.left = tabletMediaQuery.matches\n            ? positionX + caretX + 'px'\n            : positionX + caretX - tooltipWidth / 2 + 'px';\n          tooltipEl.style.top = positionY + caretY - tooltipHeight - 10 + 'px';\n          tooltipTitle.textContent =\n            context.tooltip.dataPoints[0].formattedValue;\n        },\n      },\n    },\n    indexAxis: 'x',\n    scales: {\n      x: {\n        alignToPixels: true,\n        beginAtZero: false,\n        offset: true,\n        ticks: {\n          color: '#B6B6B6',\n          padding: 6,\n          font: {\n            family: 'Poppins',\n            size: 10,\n          },\n        },\n        grid: {\n          color: '#292928',\n        },\n      },\n      y: {\n        alignToPixels: true,\n        beginAtZero: true,\n        min: 0,\n        max: yScaleMax,\n        ticks: {\n          alignToPixels: true,\n          major: {\n            enabled: true,\n          },\n          color: '#B6B6B6',\n          stepSize: 1000,\n          callback: function (value) {\n            if (String(value).length === 1) {\n              return value;\n            }\n            return String(value).slice(0, 1) + `${caption}`;\n          },\n          padding: 8,\n          font: {\n            family: 'Poppins',\n            size: 10,\n          },\n        },\n        border: {\n          display: false,\n        },\n        grid: {\n          color: '#292928',\n        },\n      },\n    },\n  };\n\n  const data = {\n    labels: time,\n    datasets: [\n      {\n        data: information,\n        borderColor: '#E3FFA8',\n        borderWidth: 1,\n        pointRadius: 0,\n        pointHoverBackgroundColor: '#E3FFA8',\n        hitRadius: 5,\n        pointHoverRadius: 5,\n        tension: 0.5,\n        drawActiveElementsOnTop: true,\n      },\n    ],\n  };\n\n  return (\n    <Chart>\n      <TitleContainer>\n        <ChartTitle>{type === 'water' ? 'Water' : 'Calories'}</ChartTitle>\n        <ValueDisplay>\n          Average value:{' '}\n          <MetricValue>\n            {average} {type === 'water' ? 'ml' : 'cal'}\n          </MetricValue>\n        </ValueDisplay>\n      </TitleContainer>\n      <ScrollWrapper>\n        <ChartContainer>\n          <Line options={options} data={data} />\n          <ChartTooltip>\n            <TooltipValue id=\"value\"></TooltipValue>\n            <TooltipMetric>\n              {type === 'water' ? 'milliliters' : 'calories'}\n            </TooltipMetric>\n          </ChartTooltip>\n        </ChartContainer>\n      </ScrollWrapper>\n    </Chart>\n  );\n};\n\nLineChart.propTypes = {\n  isYearData: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default LineChart;\n","import styled from 'styled-components';\n\nexport const Chart = styled.div`\n  display: flex;\n  row-gap: 6px;\n  flex-direction: column;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    width: 320px;\n  }\n`;\n\nexport const ChartTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.44;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.l};\n    line-height: 1.45;\n  }\n`;\n\nexport const ValueDisplay = styled.span`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n`;\n\nexport const MetricValue = styled.span`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n  color: ${p => p.theme.colors.gray};\n`;\n\nexport const ScrollWrapper = styled.div`\n  width: 300px;\n  overflow-x: scroll;\n  padding-bottom: 10px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    column-gap: 6px;\n    width: calc(834px - (24px * 2));\n  }\n\n  @media screen and (${p => p.theme.mq.desktop}) {\n    width: calc(1440px);\n  }\n\n  &::-webkit-scrollbar {\n    height: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    width: 150px;\n    background-color: rgba(41, 41, 40, 0.2);\n    border-radius: ${p => p.theme.radii.normal};\n    border: 1px solid rgba(227, 255, 168, 0.2);\n\n    &:hover {\n      background-color: rgba(227, 255, 168, 0.2);\n    }\n  }\n`;\n\nexport const ChartContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  column-gap: 20px;\n  background-color: ${p => p.theme.colors.black2};\n  border-radius: ${p => p.theme.radii.normal};\n  width: 1440px;\n  padding: 24px 24px 20px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    column-gap: 6px;\n    width: calc(834px - (24px * 2));\n    padding: 24px 20px 44px;\n  }\n\n  @media screen and (${p => p.theme.mq.desktop}) {\n    width: calc(1440px - (34px * 2));\n    padding: 24px 24px 36px;\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 16px;\n  font-family: ${p => p.theme.fontFamily.poppins};\n  font-weight: ${p => p.theme.fontWeights.regular};\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    row-gap: 12px;\n  }\n  @media screen and (${p => p.theme.mq.desktop}) {\n    row-gap: 16px;\n  }\n`;\n\nexport const ItemValue = styled.span`\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.xxs};\n    line-height: 1.6;\n  }\n  @media screen and (${p => p.theme.mq.desktop}) {\n    font-size: ${p => p.theme.fontSizes.xs};\n    line-height: 1.43;\n  }\n`;\nexport const ItemDate = styled.span`\n  font-size: ${p => p.theme.fontSizes.xxs};\n  line-height: 1.4;\n  color: ${p => p.theme.colors.gray};\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectStatisticInfo } from 'redux/Statistic/statsSelectors';\nimport { MONTH_NAME } from 'constants/monthName';\nimport {\n  Chart,\n  ChartContainer,\n  ChartTitle,\n  Item,\n  ItemDate,\n  ItemValue,\n  MetricValue,\n  ScrollWrapper,\n  TitleContainer,\n  ValueDisplay,\n} from './ScaleChart.styled';\n\nconst ScaleChart = ({ isYearData }) => {\n  const [weight, setWeight] = useState([]);\n  const [averageWeightValue, setAverageWeightValue] = useState(0);\n  const info = useSelector(selectStatisticInfo);\n\n  useEffect(() => {\n    if (!info || Object.keys(info).length === 0) return;\n\n    const weightData = info.weight || [];\n\n    const weightArray = [];\n    const valueArray = [];\n\n    weightData.forEach(item => {\n      if (!isYearData) {\n        const { _id, weight } = item;\n\n        if (_id && weight !== undefined) {\n          const formattedDate = `${_id.day}`;\n          weightArray.push({ _id: formattedDate, amount: weight.toFixed(1) });\n          valueArray.push(weight);\n        }\n      } else {\n        const { _id, avgMonth } = item;\n\n        if (_id && avgMonth !== undefined) {\n          const formattedDate = MONTH_NAME.FULL[_id.month];\n          const formattedAvgMonth = parseFloat(avgMonth.toFixed(1));\n          weightArray.push({ _id: formattedDate, amount: formattedAvgMonth });\n          valueArray.push(formattedAvgMonth);\n        }\n      }\n    });\n\n    if (valueArray.length > 0) {\n      const averageValue = parseFloat(\n        (\n          valueArray.reduce((prev, curr) => prev + curr, 0) / valueArray.length\n        ).toFixed(1)\n      );\n      setAverageWeightValue(averageValue);\n    }\n\n    setWeight(weightArray);\n  }, [isYearData, info]);\n\n  return (\n    <Chart>\n      <TitleContainer>\n        <ChartTitle>Weight</ChartTitle>\n        <ValueDisplay>\n          Average value: <MetricValue>{averageWeightValue} kg</MetricValue>\n        </ValueDisplay>\n      </TitleContainer>\n      <ScrollWrapper>\n        <ChartContainer>\n          {weight.map(({ _id, amount }) => (\n            <Item key={`${_id} ${amount}`}>\n              <ItemValue>{amount}</ItemValue>\n              <ItemDate>{_id}</ItemDate>\n            </Item>\n          ))}\n        </ChartContainer>\n      </ScrollWrapper>\n    </Chart>\n  );\n};\n\nScaleChart.propTypes = {\n  isYearData: PropTypes.bool.isRequired,\n};\n\nexport default ScaleChart;\n","export const PERIOD_TYPES = {\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","import { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Arrow,\n  ArrowReturn,\n  ButtonToggleDropdown,\n  DropdownPeriodToggle,\n  GridContainer,\n  HeaderPage,\n  LinkToBack,\n  MainHeaderBlock,\n  SecondHeader,\n  TitlePage,\n} from './ContentForDashboardPage.styled';\nimport arrowDown from 'images/icons/arrow-down.svg';\nimport arrowLeft from 'images/icons/arrow-right-open.svg';\nimport LineChart from 'components/Charts/LineChart/LineChart';\nimport ScaleChart from 'components/Charts/ScaleChart/ScaleChart';\nimport { MONTH_NAME } from 'constants/monthName';\nimport { PERIOD_TYPES } from 'constants/periodTypes';\nimport { getStatistic } from 'redux/Statistic/statsOperations';\nimport { selectIsLoading } from 'redux/Statistic/statsSelectors';\nimport Loader from 'components/Loader';\n\nconst ContentForDashboardPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const [isYearView, setIsYearView] = useState(false);\n  const [isToggleOpen, setIsToggleOpen] = useState(false);\n  const [isTransitionActive, setIsTransitionActive] = useState(false);\n  const [selectedPeriod, setSelectedPeriod] = useState(PERIOD_TYPES.MONTH);\n  const dropdownRef = useRef(null);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/main');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getStatistic(selectedPeriod));\n  }, [dispatch, selectedPeriod]);\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        closeDropdown();\n      }\n    };\n\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        closeDropdown();\n      }\n    };\n\n    if (isToggleOpen) {\n      document.body.style.overflowY = 'hidden';\n      window.addEventListener('keydown', handleKeyDown);\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      if (isToggleOpen) {\n        document.body.style.overflowY = 'auto';\n        window.removeEventListener('keydown', handleKeyDown);\n        document.removeEventListener('mousedown', handleClickOutside);\n      }\n    };\n  }, [isToggleOpen]);\n\n  const toggleDropdown = () => {\n    setIsToggleOpen(true);\n    setTimeout(() => {\n      setIsTransitionActive(true);\n    }, 0);\n  };\n\n  const closeDropdown = () => {\n    setIsTransitionActive(false);\n    setTimeout(() => {\n      setIsToggleOpen(false);\n    }, 300);\n  };\n\n  const togglePeriod = () => {\n    setIsYearView(prev => !prev);\n    setSelectedPeriod(prev =>\n      prev === PERIOD_TYPES.MONTH ? PERIOD_TYPES.YEAR : PERIOD_TYPES.MONTH\n    );\n    closeDropdown();\n  };\n\n  const currentMonth = MONTH_NAME.FULL[new Date().getMonth() + 1];\n  const currentYear = new Date().getFullYear();\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <>\n      <HeaderPage>\n        <MainHeaderBlock>\n          <LinkToBack to={backLinkLocationRef.current}>\n            <ArrowReturn src={arrowLeft} alt=\"arrow left\" />\n          </LinkToBack>\n          <ButtonToggleDropdown onClick={toggleDropdown}>\n            <TitlePage>{isYearView ? 'Last year' : 'Last month'}</TitlePage>\n            <Arrow src={arrowDown} alt=\"arrow down\" $isOpen={isToggleOpen} />\n          </ButtonToggleDropdown>\n          {isToggleOpen && (\n            <DropdownPeriodToggle\n              ref={dropdownRef}\n              className={isTransitionActive ? 'active' : ''}\n              onClick={togglePeriod}\n            >\n              {isYearView ? 'Last month' : 'Last year'}\n            </DropdownPeriodToggle>\n          )}\n        </MainHeaderBlock>\n        <SecondHeader>{isYearView ? currentYear : currentMonth}</SecondHeader>\n      </HeaderPage>\n\n      <GridContainer>\n        <LineChart isYearData={isYearView} type=\"calories\" />\n        <LineChart isYearData={isYearView} type=\"water\" />\n        <ScaleChart isYearData={isYearView} />\n      </GridContainer>\n    </>\n  );\n};\n\nexport default ContentForDashboardPage;\n","import Dashboard from 'components/ContentViews/ContentForDashboardPage';\nimport TemplatePrivatePage from 'components/PageTemplates/TemplatePrivatePage';\n\nconst DashboardPage = () => {\n  return (\n    <TemplatePrivatePage>\n      <Dashboard />\n    </TemplatePrivatePage>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["Container","styled","props","theme","colors","black","white","fontFamily","poppins","mq","tablet","desktop","Content","_ref","children","_jsx","HeaderPage","MainHeaderBlock","LinkToBack","NavLink","p","ArrowReturn","ButtonToggleDropdown","borders","none","TitlePage","fontSizes","l2","fontWeights","medium","xl","Arrow","$isOpen","DropdownPeriodToggle","black2","radii","normal","regular","s","l","SecondHeader","m","GridContainer","MONTH_NAME","FULL","SHORT","Chart","TitleContainer","ChartTitle","ValueDisplay","xs","MetricValue","gray","ScrollWrapper","ChartContainer","ChartTooltip","TooltipValue","TooltipMetric","selectIsLoading","state","statistic","isLoading","selectStatisticInfo","info","createSelector","weight","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","isYearData","type","time","setTime","useState","information","setInformation","average","setAverage","useSelector","useEffect","Object","keys","length","infoArray","timesArray","forEach","item","formattedDate","_id","month","day","value","Math","round","avgMonth","push","total","reduce","prev","curr","currentDate","Date","getUTCDate","currentMonth","getUTCMonth","caption","options","interaction","mode","intersect","responsive","plugins","legend","display","tooltip","enabled","position","external","context","chart","tooltipEl","canvas","parentNode","querySelector","tooltipTitle","tabletMediaQuery","window","matchMedia","opacity","style","offsetLeft","positionX","offsetTop","positionY","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","caretX","caretY","left","matches","top","textContent","dataPoints","formattedValue","indexAxis","scales","x","alignToPixels","beginAtZero","offset","ticks","color","padding","font","family","size","grid","y","min","max","major","stepSize","callback","String","slice","border","data","labels","datasets","borderColor","borderWidth","pointRadius","pointHoverBackgroundColor","hitRadius","pointHoverRadius","tension","drawActiveElementsOnTop","_jsxs","Line","id","Item","ItemValue","xxs","ItemDate","setWeight","averageWeightValue","setAverageWeightValue","weightData","weightArray","valueArray","undefined","formattedAvgMonth","parseFloat","toFixed","amount","averageValue","map","_ref2","PERIOD_TYPES","ContentForDashboardPage","_location$state$from","_location$state","isYearView","setIsYearView","isToggleOpen","setIsToggleOpen","isTransitionActive","setIsTransitionActive","selectedPeriod","setSelectedPeriod","dropdownRef","useRef","location","useLocation","backLinkLocationRef","from","dispatch","useDispatch","getStatistic","handleKeyDown","event","code","closeDropdown","handleClickOutside","current","contains","target","document","body","overflowY","addEventListener","removeEventListener","setTimeout","getMonth","currentYear","getFullYear","Loader","_Fragment","to","src","arrowLeft","alt","onClick","toggleDropdown","arrowDown","ref","className","togglePeriod","LineChart","ScaleChart","DashboardPage","TemplatePrivatePage","Dashboard"],"sourceRoot":""}