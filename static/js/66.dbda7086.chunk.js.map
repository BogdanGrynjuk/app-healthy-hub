{"version":3,"file":"static/js/66.dbda7086.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","set","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","Set","setContext","receiver","isScriptable","getValue","add","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","items","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_index_","_value_","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","getBasePixel","lastPoint","updateControlPoints","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","setLayoutDims","layouts","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line","Doughnut"],"sourceRoot":""}