{"version":3,"file":"static/js/352.9f2f4710.chunk.js","mappings":"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","sources":["images/icons/arrow-right-open.svg","components/PageTemplates/TemplatePrivatePage/TemplatePrivatePage.styled.jsx","components/PageTemplates/TemplatePrivatePage/TemplatePrivatePage.jsx","components/ContentViews/ContentForDashboardPage/ContentForDashboardPage.styled.jsx","constants/monthName.js","components/Charts/LineChart/LineChart.styled.jsx","redux/Statistic/statsSelectors.js","components/Charts/LineChart/LineChart.jsx","components/Charts/ScaleChart/ScaleChart.styled.jsx","components/Charts/ScaleChart/ScaleChart.jsx","constants/periodTypes.js","components/ContentViews/ContentForDashboardPage/ContentForDashboardPage.jsx","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowRightOpen(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.62012 3.95312L13.6668 7.99979L9.62012 12.0465\",\n    stroke: \"#E3FFA8\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.33301 8H13.553\",\n    stroke: \"#E3FFA8\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowRightOpen);\nexport default __webpack_public_path__ + \"static/media/arrow-right-open.4b79b540b4210b099c8be8dfec113119.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  background-color: ${props => props.theme.colors.black};\n  color: ${props => props.theme.colors.white};\n  font-family: ${props => props.theme.fontFamily.poppins};\n\n  padding-top: 16px;\n  padding-bottom: 60px;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    padding-top: 24px;\n    padding-bottom: 40px;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    padding-top: 20px;\n  }\n`;\n\nexport const Content = styled.div`\n  margin: 0 auto;\n  width: 320px;\n  padding: 0 10px;\n\n  @media screen and (${props => props.theme.mq.tablet}) {\n    position: relative;\n    width: 834px;\n    padding: 0 27px;\n  }\n\n  @media screen and (${props => props.theme.mq.desktop}) {\n    width: 1440px;\n    padding: 0 34px;\n  }\n`;\n","import React from 'react';\nimport { Container, Content } from './TemplatePrivatePage.styled';\nimport PropTypes from 'prop-types';\n\nconst TemplatePrivatePage = ({ children }) => {\n  return (\n    <Container>\n      <Content>{children}</Content>\n    </Container>\n  );\n};\n\nTemplatePrivatePage.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default TemplatePrivatePage;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const HeaderPage = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 16px;\n`;\n\nexport const MainHeaderBlock = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nexport const LinkToBack = styled(NavLink)`\n  display: flex;\n  margin-right: 8px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    margin-right: 12px;\n  }\n`;\n\nexport const ArrowReturn = styled.img`\n  width: 16px;\n  transform: rotate(180deg);\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    width: 24px;\n  }\n`;\n\nexport const ButtonToggleDropdown = styled.button`\n  display: flex;\n  align-items: center;\n  column-gap: 12px;\n  padding: 0;\n  border: ${p => p.theme.borders.none};\n  outline: none;\n  background-color: transparent;\n  color: ${p => p.theme.colors.white};\n  cursor: pointer;\n`;\n\nexport const TitlePage = styled.h1`\n  font-size: ${p => p.theme.fontSizes.l2};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: 1.25;\n  letter-spacing: 0em;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.xl};\n    line-height: 1.2;\n  }\n`;\n\nexport const Arrow = styled.img`\n  width: 16px;\n  height: 16px;\n  transform: ${({ $isOpen }) => ($isOpen ? 'rotate(180deg)' : 'rotate(0deg)')};\n  transition: transform 0.3s ease;\n`;\n\nexport const DropdownPeriodToggle = styled.button`\n  position: absolute;\n  background-color: ${p => p.theme.colors.black2};\n  border: ${p => p.theme.borders.none};\n  padding: 16px 0 16px 12px;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 0px 4px 14px 0px #e3ffa833;\n  font-family: ${p => p.theme.fontFamily.poppins};\n  font-weight: ${p => p.theme.fontWeights.regular};\n  text-align: left;\n  color: inherit;\n  z-index: 1000;\n  top: 32px;\n  left: 24px;\n  width: 188px;\n  height: 52px;\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.38;\n\n  opacity: 0;\n  transform: scale(0);\n  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1), opacity 300ms;\n  will-change: transform, opacity;\n\n  &.active {\n    transform: scale(1);\n    opacity: 1;\n  }\n\n  &:not(.active) {\n    transform: scale(0);\n    opacity: 0;\n  }\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    top: 40px;\n    left: 36px;\n    width: 212px;\n    height: 64px;\n    font-size: ${p => p.theme.fontSizes.l};\n    line-height: 1.45;\n  }\n`;\n\nexport const SecondHeader = styled.h3`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.38;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.33;\n  }\n`;\n\nexport const GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 27px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    gap: 40px;\n  }\n\n  @media screen and (${p => p.theme.mq.desktop}) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto;\n    gap: 20px;\n\n    & > div:first-child {\n      grid-column: 1 / 2;\n    }\n\n    & > div:nth-child(2) {\n      grid-column: 2 / 3;\n    }\n\n    & > div:nth-child(3) {\n      grid-column: 1 / 3;\n    }\n  }\n`;\n","const full = {\n  1: 'January',\n  2: 'February',\n  3: 'March',\n  4: 'April',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'August',\n  9: 'September',\n  10: 'October',\n  11: 'November',\n  12: 'December',\n};\n\nconst short = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'June',\n  7: 'July',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec',\n};\n\nexport const MONTH_NAME = {\n  FULL: full,\n  SHORT: short,\n};\n","import styled from 'styled-components';\n\nexport const Chart = styled.div`\n  display: flex;\n  row-gap: 6px;\n  flex-direction: column;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  margin-bottom: 6px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    width: 320px;\n  }\n`;\n\nexport const ChartTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.44;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.l};\n    line-height: 1.45;\n  }\n`;\n\nexport const ValueDisplay = styled.span`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n`;\n\nexport const MetricValue = styled.span`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n  color: ${p => p.theme.colors.gray};\n`;\n\nexport const ScrollWrapper = styled.div`\n  width: calc(320px - (10px * 2));\n  overflow-x: scroll;\n  padding-bottom: 10px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    column-gap: 6px;\n    width: calc(834px - (24px * 2));\n  }\n\n  @media screen and (${p => p.theme.mq.desktop}) {\n    width: calc((1440px - (34px * 2)) / 2 - 10px);\n  }\n\n  &::-webkit-scrollbar {\n    height: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    width: 150px;\n    background-color: rgba(41, 41, 40, 0.2);\n    border-radius: ${p => p.theme.radii.normal};\n    border: 1px solid rgba(227, 255, 168, 0.2);\n\n    &:hover {\n      background-color: rgba(227, 255, 168, 0.2);\n    }\n  }\n`;\n\nexport const ChartContainer = styled.div`\n  padding: 24px 20px 24px 14px;\n  background-color: ${p => p.theme.colors.black2};\n  border-radius: ${p => p.theme.radii.normal};\n  width: 676px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    width: 780px;\n\n    & canvas {\n      min-width: calc(780px - 34px);\n      min-height: auto;\n      margin: 0 auto;\n    }\n  }\n\n  @media screen and (${p => p.theme.mq.desktop}) {\n    width: 676px;\n\n    & canvas {\n      min-width: calc(676px - 34px);\n    }\n  }\n`;\n\nexport const ChartTooltip = styled.div`\n  width: 90px;\n  position: absolute;\n  opacity: 0;\n  top: 0;\n  left: 0;\n  padding: 8px 6px;\n  border-radius: 8px;\n  background-color: ${p => p.theme.colors.black2};\n  box-shadow: 0px 4px 14px 0px rgba(227, 255, 168, 0.2);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 2px;\n`;\n\nexport const TooltipValue = styled.span`\n  font-size: ${p => p.theme.fontSizes.xl};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: 1.19;\n`;\n\nexport const TooltipMetric = styled.span`\n  font-size: ${p => p.theme.fontSizes.xs};\n  font-weight: ${p => p.theme.fontWeights.regular};\n  line-height: 1.43;\n  color: ${p => p.theme.colors.gray};\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectStatisticInfo = state => state.statistic.info;\n\nexport const selectStatisticPerYear = createSelector(\n  [selectStatisticInfo],\n  statistic => statistic.weight\n);\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { MONTH_NAME } from 'constants/monthName.js';\n\nimport {\n  Chart,\n  ChartContainer,\n  ChartTitle,\n  ChartTooltip,\n  MetricValue,\n  ScrollWrapper,\n  TitleContainer,\n  TooltipMetric,\n  TooltipValue,\n  ValueDisplay,\n} from './LineChart.styled';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nimport { selectStatisticInfo } from 'redux/Statistic/statsSelectors.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst LineChart = ({ isYearData, type }) => {\n  const [time, setTime] = useState([]);\n  const [information, setInformation] = useState([]);\n  const [average, setAverage] = useState(0);\n\n  const info = useSelector(selectStatisticInfo);\n\n  useEffect(() => {\n    if (!info || Object.keys(info).length === 0) {\n      return;\n    }\n\n    const infoArray = [];\n    const timesArray = [];\n    const statistic = info[type] || [];\n\n    statistic.forEach(item => {\n      const formattedDate = isYearData\n        ? MONTH_NAME.SHORT[item._id.month]\n        : `${item._id.day}`;\n\n      const value = isYearData ? Math.round(item.avgMonth) : item[type];\n\n      timesArray.push(formattedDate);\n      infoArray.push(value);\n    });\n\n    const total =\n      infoArray.length > 0\n        ? Math.round(\n            infoArray.reduce((prev, curr) => prev + curr, 0) / infoArray.length\n          )\n        : 0;\n\n    if (infoArray.length === 0) {\n      const currentDate = new Date().getUTCDate();\n      const currentMonth = new Date().getUTCMonth() + 1;\n      timesArray.push(\n        isYearData ? MONTH_NAME.SHORT[currentMonth] : currentDate\n      );\n      infoArray.push(0);\n    }\n\n    setAverage(total);\n    setInformation(infoArray);\n    setTime(timesArray);\n  }, [info, isYearData, type]);\n\n  let caption = type === 'water' ? 'L' : 'K';\n  const yScaleMax = Math.max(...information) + 1000;\n\n  const options = {\n    interaction: {\n      mode: 'index',\n      intersect: false,\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n        position: 'nearest',\n        external: context => {\n          const { chart, tooltip } = context;\n          let tooltipEl = chart.canvas.parentNode.querySelector('div');\n          let tooltipTitle = chart.canvas.parentNode.querySelector('#value');\n          const tabletMediaQuery = window.matchMedia(\n            '(min-width: 768px) and (max-width: 1439px)'\n          );\n\n          if (tooltip.opacity === 0) {\n            tooltipEl.style.opacity = 0;\n            return;\n          }\n          const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\n          const tooltipWidth = tooltipEl.offsetWidth;\n          const tooltipHeight = tooltipEl.offsetHeight;\n          const caretX = tooltip.caretX;\n          const caretY = tooltip.caretY;\n\n          tooltipEl.style.opacity = 1;\n          tooltipEl.style.left = tabletMediaQuery.matches\n            ? positionX + caretX + 'px'\n            : positionX + caretX - tooltipWidth / 2 + 'px';\n          tooltipEl.style.top = positionY + caretY - tooltipHeight - 10 + 'px';\n          tooltipTitle.textContent =\n            context.tooltip.dataPoints[0].formattedValue;\n        },\n      },\n    },\n    indexAxis: 'x',\n    scales: {\n      x: {\n        alignToPixels: true,\n        beginAtZero: false,\n        offset: true,\n        ticks: {\n          color: '#B6B6B6',\n          padding: 6,\n          font: {\n            family: 'Poppins',\n            size: 10,\n          },\n        },\n        grid: {\n          color: '#292928',\n        },\n      },\n      y: {\n        alignToPixels: true,\n        beginAtZero: true,\n        min: 0,\n        max: yScaleMax,\n        ticks: {\n          alignToPixels: true,\n          major: {\n            enabled: true,\n          },\n          color: '#B6B6B6',\n          stepSize: 1000,\n          callback: function (value) {\n            if (String(value).length === 1) {\n              return value;\n            }\n            return String(value).slice(0, 1) + `${caption}`;\n          },\n          padding: 8,\n          font: {\n            family: 'Poppins',\n            size: 10,\n          },\n        },\n        border: {\n          display: false,\n        },\n        grid: {\n          color: '#292928',\n        },\n      },\n    },\n  };\n\n  const data = {\n    labels: time,\n    datasets: [\n      {\n        data: information,\n        borderColor: '#E3FFA8',\n        borderWidth: 1,\n        pointRadius: 0,\n        pointHoverBackgroundColor: '#E3FFA8',\n        hitRadius: 5,\n        pointHoverRadius: 5,\n        tension: 0.5,\n        drawActiveElementsOnTop: true,\n      },\n    ],\n  };\n\n  return (\n    <Chart>\n      <TitleContainer>\n        <ChartTitle>{type === 'water' ? 'Water' : 'Calories'}</ChartTitle>\n        <ValueDisplay>\n          Average value:{' '}\n          <MetricValue>\n            {average} {type === 'water' ? 'ml' : 'cal'}\n          </MetricValue>\n        </ValueDisplay>\n      </TitleContainer>\n      <ScrollWrapper>\n        <ChartContainer>\n          <Line options={options} data={data} />\n          <ChartTooltip>\n            <TooltipValue id=\"value\"></TooltipValue>\n            <TooltipMetric>\n              {type === 'water' ? 'milliliters' : 'calories'}\n            </TooltipMetric>\n          </ChartTooltip>\n        </ChartContainer>\n      </ScrollWrapper>\n    </Chart>\n  );\n};\n\nLineChart.propTypes = {\n  isYearData: PropTypes.bool.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default LineChart;\n","import styled from 'styled-components';\n\nexport const Chart = styled.div`\n  display: flex;\n  row-gap: 6px;\n  flex-direction: column;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    width: 320px;\n  }\n`;\n\nexport const ChartTitle = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.44;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.l};\n    line-height: 1.45;\n  }\n`;\n\nexport const ValueDisplay = styled.span`\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n`;\n\nexport const MetricValue = styled.span`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n  color: ${p => p.theme.colors.gray};\n`;\n\nexport const ScrollWrapper = styled.div`\n  width: 300px;\n  overflow-x: scroll;\n  padding-bottom: 10px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    column-gap: 6px;\n    width: calc(834px - (24px * 2));\n  }\n\n  @media screen and (${p => p.theme.mq.desktop}) {\n    width: calc(1440px);\n  }\n\n  &::-webkit-scrollbar {\n    height: 7px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    width: 150px;\n    background-color: rgba(41, 41, 40, 0.2);\n    border-radius: ${p => p.theme.radii.normal};\n    border: 1px solid rgba(227, 255, 168, 0.2);\n\n    &:hover {\n      background-color: rgba(227, 255, 168, 0.2);\n    }\n  }\n`;\n\nexport const ChartContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  column-gap: 20px;\n  background-color: ${p => p.theme.colors.black2};\n  border-radius: ${p => p.theme.radii.normal};\n  width: 1440px;\n  padding: 24px 24px 20px;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    column-gap: 6px;\n    width: calc(834px - (24px * 2));\n    padding: 24px 20px 44px;\n  }\n\n  @media screen and (${p => p.theme.mq.desktop}) {\n    width: calc(1440px - (34px * 2));\n    padding: 24px 24px 36px;\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  row-gap: 16px;\n  font-family: ${p => p.theme.fontFamily.poppins};\n  font-weight: ${p => p.theme.fontWeights.regular};\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    row-gap: 12px;\n  }\n  @media screen and (${p => p.theme.mq.desktop}) {\n    row-gap: 16px;\n  }\n`;\n\nexport const ItemValue = styled.span`\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.43;\n\n  @media screen and (${p => p.theme.mq.tablet}) {\n    font-size: ${p => p.theme.fontSizes.xxs};\n    line-height: 1.6;\n  }\n  @media screen and (${p => p.theme.mq.desktop}) {\n    font-size: ${p => p.theme.fontSizes.xs};\n    line-height: 1.43;\n  }\n`;\nexport const ItemDate = styled.span`\n  font-size: ${p => p.theme.fontSizes.xxs};\n  line-height: 1.4;\n  color: ${p => p.theme.colors.gray};\n`;\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectStatisticInfo } from 'redux/Statistic/statsSelectors';\nimport { MONTH_NAME } from 'constants/monthName';\nimport {\n  Chart,\n  ChartContainer,\n  ChartTitle,\n  Item,\n  ItemDate,\n  ItemValue,\n  MetricValue,\n  ScrollWrapper,\n  TitleContainer,\n  ValueDisplay,\n} from './ScaleChart.styled';\n\nconst ScaleChart = ({ isYearData }) => {\n  const [weight, setWeight] = useState([]);\n  const [averageWeightValue, setAverageWeightValue] = useState(0);\n  const info = useSelector(selectStatisticInfo);\n\n  useEffect(() => {\n    if (!info || Object.keys(info).length === 0) return;\n\n    const weightData = info.weight || [];\n\n    const weightArray = [];\n    const valueArray = [];\n\n    weightData.forEach(item => {\n      if (!isYearData) {\n        const { _id, weight } = item;\n\n        if (_id && weight !== undefined) {\n          const formattedDate = `${_id.day}`;\n          weightArray.push({ _id: formattedDate, amount: weight.toFixed(1) });\n          valueArray.push(weight);\n        }\n      } else {\n        const { _id, avgMonth } = item;\n\n        if (_id && avgMonth !== undefined) {\n          const formattedDate = MONTH_NAME.FULL[_id.month];\n          const formattedAvgMonth = parseFloat(avgMonth.toFixed(1));\n          weightArray.push({ _id: formattedDate, amount: formattedAvgMonth });\n          valueArray.push(formattedAvgMonth);\n        }\n      }\n    });\n\n    if (valueArray.length > 0) {\n      const averageValue = parseFloat(\n        (\n          valueArray.reduce((prev, curr) => prev + curr, 0) / valueArray.length\n        ).toFixed(1)\n      );\n      setAverageWeightValue(averageValue);\n    }\n\n    setWeight(weightArray);\n  }, [isYearData, info]);\n\n  return (\n    <Chart>\n      <TitleContainer>\n        <ChartTitle>Weight</ChartTitle>\n        <ValueDisplay>\n          Average value: <MetricValue>{averageWeightValue} kg</MetricValue>\n        </ValueDisplay>\n      </TitleContainer>\n      <ScrollWrapper>\n        <ChartContainer>\n          {weight.map(({ _id, amount }) => (\n            <Item key={`${_id} ${amount}`}>\n              <ItemValue>{amount}</ItemValue>\n              <ItemDate>{_id}</ItemDate>\n            </Item>\n          ))}\n        </ChartContainer>\n      </ScrollWrapper>\n    </Chart>\n  );\n};\n\nScaleChart.propTypes = {\n  isYearData: PropTypes.bool.isRequired,\n};\n\nexport default ScaleChart;\n","export const PERIOD_TYPES = {\n  MONTH: 'month',\n  YEAR: 'year',\n};\n","import { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  Arrow,\n  ArrowReturn,\n  ButtonToggleDropdown,\n  DropdownPeriodToggle,\n  GridContainer,\n  HeaderPage,\n  LinkToBack,\n  MainHeaderBlock,\n  SecondHeader,\n  TitlePage,\n} from './ContentForDashboardPage.styled';\nimport arrowDown from 'images/icons/arrow-down.svg';\nimport arrowLeft from 'images/icons/arrow-right-open.svg';\nimport LineChart from 'components/Charts/LineChart/LineChart';\nimport ScaleChart from 'components/Charts/ScaleChart/ScaleChart';\nimport { MONTH_NAME } from 'constants/monthName';\nimport { PERIOD_TYPES } from 'constants/periodTypes';\nimport { getStatistic } from 'redux/Statistic/statsOperations';\n\nconst ContentForDashboardPage = () => {\n  const [isYearView, setIsYearView] = useState(false);\n  const [isToggleOpen, setIsToggleOpen] = useState(false);\n  const [isTransitionActive, setIsTransitionActive] = useState(false);\n  const [selectedPeriod, setSelectedPeriod] = useState(PERIOD_TYPES.MONTH);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/main');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getStatistic(selectedPeriod));\n  }, [dispatch, selectedPeriod]);\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        closeDropdown();\n      }\n    };\n\n    if (isToggleOpen) {\n      document.body.style.overflowY = 'hidden';\n      window.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      if (isToggleOpen) {\n        document.body.style.overflowY = 'auto';\n        window.removeEventListener('keydown', handleKeyDown);\n      }\n    };\n  }, [isToggleOpen]);\n\n  const toggleDropdown = () => {\n    setIsToggleOpen(true);\n    setTimeout(() => {\n      setIsTransitionActive(true);\n    }, 0);\n  };\n\n  const closeDropdown = () => {\n    setIsTransitionActive(false);\n    setTimeout(() => {\n      setIsToggleOpen(false);\n    }, 300);\n  };\n\n  const togglePeriod = () => {\n    setIsYearView(prev => !prev);\n    setSelectedPeriod(prev =>\n      prev === PERIOD_TYPES.MONTH ? PERIOD_TYPES.YEAR : PERIOD_TYPES.MONTH\n    );\n    closeDropdown();\n  };\n\n  const currentMonth = MONTH_NAME.FULL[new Date().getMonth() + 1];\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <>\n      <HeaderPage>\n        <MainHeaderBlock>\n          <LinkToBack to={backLinkLocationRef.current}>\n            <ArrowReturn src={arrowLeft} alt=\"arrow left\" />\n          </LinkToBack>\n          <ButtonToggleDropdown onClick={toggleDropdown}>\n            <TitlePage>{isYearView ? 'Last year' : 'Last month'}</TitlePage>\n            <Arrow src={arrowDown} alt=\"arrow down\" $isOpen={isToggleOpen} />\n          </ButtonToggleDropdown>\n          {isToggleOpen && (\n            <DropdownPeriodToggle\n              className={isTransitionActive ? 'active' : ''}\n              onClick={togglePeriod}\n            >\n              {isYearView ? 'Last month' : 'Last year'}\n            </DropdownPeriodToggle>\n          )}\n        </MainHeaderBlock>\n        <SecondHeader>{isYearView ? currentYear : currentMonth}</SecondHeader>\n      </HeaderPage>\n\n      <GridContainer>\n        <LineChart isYearData={isYearView} type=\"calories\" />\n        <LineChart isYearData={isYearView} type=\"water\" />\n        <ScaleChart isYearData={isYearView} />\n      </GridContainer>\n    </>\n  );\n};\n\nexport default ContentForDashboardPage;\n","import Dashboard from 'components/ContentViews/ContentForDashboardPage';\nimport TemplatePrivatePage from 'components/PageTemplates/TemplatePrivatePage';\n\nconst DashboardPage = () => {\n  return (\n    <TemplatePrivatePage>\n      <Dashboard />\n    </TemplatePrivatePage>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","props","theme","colors","black","white","fontFamily","poppins","mq","tablet","desktop","Content","_templateObject2","_ref","children","_jsx","HeaderPage","MainHeaderBlock","LinkToBack","NavLink","_templateObject3","p","ArrowReturn","_templateObject4","ButtonToggleDropdown","_templateObject5","borders","none","TitlePage","_templateObject6","fontSizes","l2","fontWeights","medium","xl","Arrow","_templateObject7","$isOpen","DropdownPeriodToggle","_templateObject8","black2","radii","normal","regular","s","l","SecondHeader","_templateObject9","m","GridContainer","_templateObject10","MONTH_NAME","FULL","SHORT","Chart","TitleContainer","ChartTitle","ValueDisplay","xs","MetricValue","gray","ScrollWrapper","ChartContainer","ChartTooltip","TooltipValue","TooltipMetric","selectStatisticInfo","state","statistic","info","createSelector","weight","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","isYearData","type","_useState","useState","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","information","setInformation","_useState5","_useState6","average","setAverage","useSelector","useEffect","Object","keys","length","infoArray","timesArray","forEach","item","formattedDate","_id","month","concat","day","value","Math","round","avgMonth","push","total","reduce","prev","curr","currentDate","Date","getUTCDate","currentMonth","getUTCMonth","caption","options","interaction","mode","intersect","responsive","plugins","legend","display","tooltip","enabled","position","external","context","chart","tooltipEl","canvas","parentNode","querySelector","tooltipTitle","tabletMediaQuery","window","matchMedia","opacity","_chart$canvas","positionX","offsetLeft","positionY","offsetTop","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","caretX","caretY","style","left","matches","top","textContent","dataPoints","formattedValue","indexAxis","scales","x","alignToPixels","beginAtZero","offset","ticks","color","padding","font","family","size","grid","y","min","max","apply","_toConsumableArray","major","stepSize","callback","String","slice","border","data","labels","datasets","borderColor","borderWidth","pointRadius","pointHoverBackgroundColor","hitRadius","pointHoverRadius","tension","drawActiveElementsOnTop","_jsxs","Line","id","Item","ItemValue","xxs","ItemDate","setWeight","averageWeightValue","setAverageWeightValue","weightData","weightArray","valueArray","undefined","formattedAvgMonth","parseFloat","toFixed","amount","averageValue","map","_ref2","PERIOD_TYPES","_location$state$from","_location$state","isYearView","setIsYearView","isToggleOpen","setIsToggleOpen","isTransitionActive","setIsTransitionActive","_useState7","_useState8","selectedPeriod","setSelectedPeriod","location","useLocation","backLinkLocationRef","useRef","from","dispatch","useDispatch","getStatistic","handleKeyDown","event","code","closeDropdown","document","body","overflowY","addEventListener","removeEventListener","setTimeout","getMonth","currentYear","getFullYear","_Fragment","to","current","src","arrowLeft","alt","onClick","arrowDown","className","LineChart","ScaleChart","TemplatePrivatePage","Dashboard"],"sourceRoot":""}